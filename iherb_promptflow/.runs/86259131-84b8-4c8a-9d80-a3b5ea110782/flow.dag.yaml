id: template_chat_flow
name: Template Chat Flow
inputs:
  chat_history:
    type: list
    is_chat_input: false
    is_chat_history: true
  question:
    type: string
    is_chat_input: true
outputs:
  answer:
    type: string
    reference: ${generate_output.output}
    is_chat_output: true
nodes:
- name: classify_input
  type: llm
  source:
    type: code
    path: classify_input.jinja2
  inputs:
    deployment_name: gpt-35-turbo
    temperature: 0.5
    top_p: 1
    max_tokens: 10
    response_format:
      type: text
    user_input: ${inputs.question}
  provider: AzureOpenAI
  connection: Default_AzureOpenAI
  api: chat
  module: promptflow.tools.aoai
  use_variants: false
- name: classification_result
  type: python
  source:
    type: code
    path: classification_result.py
  inputs:
    classification: ${classify_input.output}
  use_variants: false
- name: request_rephrasing
  type: llm
  source:
    type: code
    path: chat.jinja2
  inputs:
    deployment_name: gpt-35-turbo
    temperature: 0.7
    top_p: 1
    max_tokens: 256
    response_format:
      type: text
    chat_history: ${inputs.chat_history}
    chat_input: ${inputs.question}
  provider: AzureOpenAI
  connection: Default_AzureOpenAI
  api: chat
  module: promptflow.tools.aoai
  activate:
    when: ${classification_result.output}
    is: 1
  use_variants: false
- name: get_products_info
  type: python
  source:
    type: code
    path: get_products_info.py
  inputs: {}
  use_variants: false
- name: sql_guery_generation
  type: llm
  source:
    type: code
    path: sql_guery_generation.jinja2
  inputs:
    deployment_name: gpt-35-turbo
    temperature: 0.7
    top_p: 1
    max_tokens: 500
    response_format:
      type: text
    existing_products: ${get_products_info.output}
    regenerated_input: ${request_rephrasing.output}
  provider: AzureOpenAI
  connection: Default_AzureOpenAI
  api: chat
  module: promptflow.tools.aoai
  activate:
    when: ${classification_result.output}
    is: 1
  use_variants: false
- name: sql_query_execution
  type: python
  source:
    type: code
    path: sql_query_execution.py
  inputs:
    generated_sql: ${sql_guery_generation.output}
  activate:
    when: ${classification_result.output}
    is: 1
  use_variants: false
- name: found_results_num
  type: python
  source:
    type: code
    path: found_results_num.py
  inputs:
    found_products: ${sql_query_execution.output}
  activate:
    when: ${classification_result.output}
    is: 1
  use_variants: false
- name: no_results
  type: llm
  source:
    type: code
    path: search_results.jinja2
  inputs:
    deployment_name: gpt-35-turbo
    temperature: 0.7
    top_p: 1
    max_tokens: 500
    response_format:
      type: text
    user_request: ${request_rephrasing.output}
  provider: AzureOpenAI
  connection: Default_AzureOpenAI
  api: chat
  module: promptflow.tools.aoai
  activate:
    when: ${found_results_num.output}
    is: 0
  use_variants: false
- name: found_results
  type: llm
  source:
    type: code
    path: found_results.jinja2
  inputs:
    deployment_name: gpt-35-turbo
    temperature: 0.7
    top_p: 1
    max_tokens: 200
    response_format:
      type: text
    available_products: ${sql_query_execution.output}
    product_catalogue: ${get_products_info.output}
    user_request: ${request_rephrasing.output}
  provider: AzureOpenAI
  connection: Default_AzureOpenAI
  api: chat
  module: promptflow.tools.aoai
  activate:
    when: ${found_results_num.output}
    is: 1
  use_variants: false
- name: generate_output
  type: python
  source:
    type: code
    path: generate_output.py
  inputs:
    input1: ${no_results.output}
    input2: ${found_results.output}
  use_variants: false
node_variants: {}
environment:
  python_requirements_txt: requirements.txt
